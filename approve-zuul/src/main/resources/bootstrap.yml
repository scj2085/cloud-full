spring:
  application:
    name: approve-zuul #对应前配置文件中的{application}部分
  cloud:
    config: 
   #   uri: "http://localhost:7001/" 当引用serviceid时，就代替了此url
      profile: dev
      label: master
      discovery:
        enabled: true #参数设置为true，开启通过服务来访问Config Server的功能
        serviceId: approve-config #参数来指定Config Server注册的服务名   
server:
  port: 5555
#zuul路由规则已提取到git仓库
#zuul:
#  routes:
#    api-a-url:
#      path: /schedule/**
#      url: http://localhost:9004/ #也就是说当我们访问http://localhost:5555/api-a-url/add?a=1&b=2的时候，Zuul会将该请求路由到：http://localhost:2222/add?a=1&b=2上
#    api-a:
#      path: /approve/**
#      serviceId: approve-provider #相当于approve-provider的url,推荐使用serviceId的映射方式，除了对Zuul维护上更加友好之外，serviceId映射方式还支持了断路器，对于服务故障的情况下，可以有效的防止故障蔓延到服务网关上而影响整个系统的对外服务
#   api-b:
#      path: /attend/**
#      serviceId: service-B
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: "http://peer1:8761/eureka/,http://peer2:8762/eureka/,http://peer3:8763/eureka/"     #不使用注册中心,会带来侵入性